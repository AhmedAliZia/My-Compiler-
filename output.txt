(DATATYPE , int)
(SEPERATOR, :)
(IDENTIFIER, num)
(SEPERATOR, ;)
(DATATYPE , char)
(SEPERATOR, :)
(IDENTIFIER, my_char)
(SEPERATOR, ;)
(COMMENT,  lets assign variable my_char a value)
(IDENTIFIER, my_char)
(ASSIGNMENT, =)
(CONSTANT, 'd')
(SEPERATOR, ;)
(IO , print)
(PARANTHESIS, ()
(CONSTANT, "my char contains: ")
(PARANTHESIS, ))
(SEPERATOR, ;)
(IO , println)
(PARANTHESIS, ()
(IDENTIFIER, my_char)
(PARANTHESIS, ))
(SEPERATOR, ;)
(COMMENT, The program here onwards is an iterative algorithmfor fibonacci numbers*/)
(IO , println)
(PARANTHESIS, ()
(CONSTANT, "enter a number")
(PARANTHESIS, ))
(SEPERATOR, ;)
(IO , input)
(ASSIGNMENT, ->)
(IDENTIFIER, num)
(SEPERATOR, ;)
(DATATYPE , int)
(SEPERATOR, :)
(IDENTIFIER, a)
(ASSIGNMENT, =)
(CONSTANT, 0 )
(SEPERATOR, ,)
(IDENTIFIER, b)
(ASSIGNMENT, =)
(CONSTANT, 1 )
(SEPERATOR, ,)
(IDENTIFIER, c)
(ASSIGNMENT, =)
(CONSTANT, 0 )
(SEPERATOR, ;)
(IO , println)
(PARANTHESIS, ()
(CONSTANT, "The fibonacci seq is: ")
(PARANTHESIS, ))
(SEPERATOR, ;)
(IO , println)
(PARANTHESIS, ()
(IDENTIFIER, a)
(PARANTHESIS, ))
(SEPERATOR, ;)
(IO , println)
(PARANTHESIS, ()
(IDENTIFIER, b)
(PARANTHESIS, ))
(SEPERATOR, ;)
(LOOPING STATEMENT , while)
(IDENTIFIER, c)
(RELATIONAL, <)
(IDENTIFIER, num)
(SEPERATOR, :)
(PARANTHESIS, {)
(DATATYPE , int)
(SEPERATOR, :)
(IDENTIFIER, temp)
(ASSIGNMENT, =)
(IDENTIFIER, a)
(ARITHMETIC, +)
(IDENTIFIER, b)
(SEPERATOR, ;)
(IDENTIFIER, a)
(ASSIGNMENT, =)
(IDENTIFIER, b)
(SEPERATOR, ;)
(IDENTIFIER, b)
(ASSIGNMENT, =)
(IDENTIFIER, temp)
(SEPERATOR, ;)
(IO , println)
(PARANTHESIS, ()
(IDENTIFIER, temp)
(PARANTHESIS, ))
(SEPERATOR, ;)
(IDENTIFIER, c)
(INCREMENT, ++)
(SEPERATOR, ;)
(PARANTHESIS, })
